name: UMC Amargetdon CI/CD

on:
  push:
    branches: [ "develop" ] 

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # Build를 위한 JDK 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      # 소스 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # application.yml file 생성
      - name: make application.yml
        run: |
           cd ./src/main/resources
           
           touch ./application.yml
           echo "${{ secrets.YML }}" >> ./application.yml
        shell: bash

     # resources 디렉토리 내용 출력 (디버깅용)
      - name: List resources directory
        run: |
          ls -l ./src/main/resources
          if [ -f ./src/main/resources/adjective.txt ]; then echo "adjective.txt exists"; else echo "adjective.txt does not exist"; fi
        shell: bash

      # 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # Docker 이미지 빌드
      - name: Docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest .

      # DockerHub 로그인
      - name: DockerHub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Docker Hub 이미지 푸시
      - name: Docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest

      # Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            sudo docker stop $(docker ps -a -q --filter "name=armagetdon-app") || true
            sudo docker rm $(docker ps -a -q --filter "name=armagetdon-app") || true
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest
            sudo docker run -d --name armagetdon-app -p 8080:8080 -e TZ=Asia/Seoul ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest

